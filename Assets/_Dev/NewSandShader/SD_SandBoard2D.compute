#pragma kernel  Init   
#pragma kernel  SkinnyPouring
#pragma kernel  ScatterPouring     

RWTexture2D<float4> Height;

uint2   StartId;

float   InverseWidth;
float   InverseHeight;

float   InitHeight;
float3  InitColor;


float2  SandCenter;
float   SandRadius;
float4  SandAmount;


[numthreads(8,8,1)]
void Init (uint3 DispatchThreadID : SV_DispatchThreadID)
{
    Height[DispatchThreadID.xy] = float4(InitColor, InitHeight);
}

[numthreads(8, 8, 1)]
void SkinnyPouring(uint3 DispatchThreadID : SV_DispatchThreadID, uint3 GroupID : SV_GroupID)
{
    uint2 id = uint2(DispatchThreadID.x + StartId.x, DispatchThreadID.y + StartId.y);
    float2 UV = float2(id.x * InverseWidth, id.y * InverseHeight);
    float dist = distance(SandCenter, UV);
    if (dist < SandRadius)
    {
        float power = 1.0f - dist / SandRadius;
        float oldHeight = Height[id].w;
        float3 oldColor = Height[id].xyz;
        float3 newColor = SandAmount.xyz;
        float newHeight = SandAmount.w * power;
        float mixedHeight = oldHeight + newHeight;
        float3 mixedColor = oldHeight * oldColor + newHeight * newColor;
        mixedColor /= mixedHeight;
        mixedHeight = clamp(mixedHeight, 0.0f, 1.0f);
        Height[id] = float4(mixedColor, mixedHeight);
    }
}

[numthreads(8, 8, 1)]
void ScatterPouring(uint3 DispatchThreadID : SV_DispatchThreadID, uint3 GroupID : SV_GroupID)
{
    uint2 id = uint2(DispatchThreadID.x + StartId.x, DispatchThreadID.y + StartId.y);
    float2 UV = float2(id.x * InverseWidth, id.y * InverseHeight);
    float dist = distance(SandCenter, UV);
    if (dist < SandRadius)
    {
        float power = 1.0f - dist / SandRadius;
        float oldHeight = Height[id].w;
        float3 oldColor = Height[id].xyz;
        float3 newColor = SandAmount.xyz;
        float newHeight = SandAmount.w * power;
        float mixedHeight = oldHeight + newHeight;
        float3 mixedColor = oldHeight * oldColor + newHeight * newColor;
        mixedColor /= mixedHeight;
        mixedHeight = clamp(mixedHeight, 0.0f, 1.0f);
        Height[id] = float4(mixedColor, mixedHeight);
    }
}

// [numthreads(8, 8, 1)]
// void ScatterPouring(uint3 DispatchThreadID : SV_DispatchThreadID, uint3 GroupID : SV_GroupID)
// {
//     uint2 id = uint2(DispatchThreadID.x + StartId.x, DispatchThreadID.y + StartId.y);
//     float dist = distance(id, SandCenter);
//     float power = saturate(1.0 - dist / SandRadius);
//     Height[id] += SandAmount * power;
//     Height[id] = clamp(Height[id], 0.0, MaxHeight);
// }



